{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedProducts","addProducts","product","setState","includes","filter","select","clear","this","className","length","join","type","onClick","undefined","map","classNames","Component","ReactDOM","render","document","getElementById"],"mappings":"4PAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,iBAAkB,CAAC,QAFvB,EAKEC,YAAc,SAACC,GACb,IAAQF,EAAqB,EAAKD,MAA1BC,iBAER,EAAKG,SAAS,CACZH,iBAAmBA,EAAiBI,SAASF,GACzCF,EAAiBK,QAAO,SAAAC,GAAM,OAAIA,IAAWJ,KAD9B,sBAEXF,GAFW,CAEOE,OAXhC,EAgBEK,MAAQ,WACN,EAAKJ,SAAS,CACZH,iBAAkB,MAlBxB,4CAsBE,WAAU,IAEcE,EAFf,OACCF,EAAqBQ,KAAKT,MAA1BC,iBAKR,OACE,sBAAKS,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,oBAAIA,UAAU,iBAAd,SACGT,EAAiBU,QARJR,EASGF,EAToBE,EAAQQ,OAAS,EAAjB,UACtCV,EAAiBW,KAAK,MADgB,2BAEtCX,EAAiBW,KAAK,MAFgB,iBAUjC,sBAELX,EAAiBU,OAEd,wBACEE,KAAK,SACLH,UAAU,oBACVI,QAASL,KAAKD,MAHhB,wBAQAO,KAELjB,EAAgBkB,KAAI,SAAAb,GAAO,OAC1B,sBAAKO,UAAWO,IACd,OACAhB,EAAiBI,SAASF,GACtB,QACA,IAJN,UAOE,8BAAMA,IACN,qBAAKO,UAAU,UAAf,SAEE,wBACEG,KAAK,SACLH,UAAWO,IACT,SACAhB,EAAiBI,SAASF,GACtB,YACA,cAENW,QAAS,kBAAM,EAAKZ,YAAYC,IARlC,SAUGF,EAAiBI,SAASF,GACvB,SACA,0BAvEpB,GAAyBe,aClBzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.838198cf.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Component } from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedProducts: string[],\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    selectedProducts: ['Jam'],\n  };\n\n  addProducts = (product: string) => {\n    const { selectedProducts } = this.state;\n\n    this.setState({\n      selectedProducts: (selectedProducts.includes(product)\n        ? selectedProducts.filter(select => select !== product)\n        : [...selectedProducts, product]\n      ),\n    });\n  };\n\n  clear = () => {\n    this.setState({\n      selectedProducts: [],\n    });\n  };\n\n  render() {\n    const { selectedProducts } = this.state;\n    const listProducts = (product: string[]) => (product.length > 1\n      ? `${selectedProducts.join(', ')} are selected`\n      : `${selectedProducts.join(', ')} is selected`);\n\n    return (\n      <div className=\"App\">\n        <div className=\"selected\">\n          <h1 className=\"selected__list\">\n            {selectedProducts.length\n              ? listProducts(selectedProducts)\n              : 'No goods selected'}\n          </h1>\n          {selectedProducts.length\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-warning\"\n                onClick={this.clear}\n              >\n                clear\n              </button>\n            )\n            : undefined}\n        </div>\n        {goodsFromServer.map(product => (\n          <div className={classNames(\n            'list',\n            selectedProducts.includes(product)\n              ? 'color'\n              : '',\n          )}\n          >\n            <div>{product}</div>\n            <div className=\"buttons\">\n\n              <button\n                type=\"button\"\n                className={classNames(\n                  'button',\n                  selectedProducts.includes(product)\n                    ? 'is-danger'\n                    : 'is-primary',\n                )}\n                onClick={() => this.addProducts(product)}\n              >\n                {selectedProducts.includes(product)\n                  ? 'remove'\n                  : 'select'}\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}